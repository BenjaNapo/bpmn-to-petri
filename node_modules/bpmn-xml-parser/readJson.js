export default class ReadJson {
  GetFirstElementByName(jsonObj, desiredName) {
    let result = "";
    let lowerLeaf = "";
    let i = 0;
    if (!this._isDefined(jsonObj.elements)) return result;

    let item = jsonObj.elements[i];
    while (this._isDefined(item)) {
      if (item.name === desiredName) {
        result = item;
        break;
      } else {
        lowerLeaf = this.GetFirstElementByName(item, desiredName);
        if (lowerLeaf !== "") {
          result = lowerLeaf;
        }
      }
      item = jsonObj.elements[++i];
    }
    return result;
  }

  GetAllElementsByName(jsonObj, desiredName) {
    let result = [];
    let lowerLeaf = [];
    let i = 0;
    if (!this._isDefined(jsonObj.elements)) return result;

    let item = jsonObj.elements[i];
    while (this._isDefined(item)) {
      if (item.name === desiredName) {
        result.push(item);
      } else {
        lowerLeaf = this.GetAllElementsByName(item, desiredName);
        if (lowerLeaf.length > 0) {
          result = result.concat(lowerLeaf);
        }
      }
      item = jsonObj.elements[++i];
    }
    return result;
  }

  GetEventReceivers(jsonObjs, messageFlowLabel) {
    let result = [];
    let i = 0;
    if (!this._isDefined(jsonObjs)) return result;
    let item = jsonObjs[i];

    while (this._isDefined(item)) {
      if (item.name === messageFlowLabel) {
        result.push(item.attributes.targetRef);
      }
      item = jsonObjs[++i];
    }
    return result;
  }

  GetEventSenders(jsonObjs, messageFlowLabel) {
    let result = [];
    let i = 0;
    if (!this._isDefined(jsonObjs)) return result;
    let item = jsonObjs[i];

    while (this._isDefined(item)) {
      if (item.name === messageFlowLabel) {
        result.push(item.attributes.sourceRef);
      }
      item = jsonObjs[++i];
    }
    return result;
  }

  _isDefined(structure) {
    if (typeof structure !== "undefined") {
      return true;
    }
    return false;
  }
}
